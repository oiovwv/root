//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Biz.SySWS {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://st-anda.com/", ConfigurationName="SySWS.SystemWSSoap")]
    public interface SystemWSSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/SetUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void SetUser(string Username, string IP, string MAC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/SetUser", ReplyAction="*")]
        System.Threading.Tasks.Task SetUserAsync(string Username, string IP, string MAC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/checkUserLogin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet checkUserLogin(string[] conditions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/checkUserLogin", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> checkUserLoginAsync(string[] conditions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/updateUserPass", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int updateUserPass(string uid, string upass, string uname, string uemail, string utel, string cellPhone, string userad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/updateUserPass", ReplyAction="*")]
        System.Threading.Tasks.Task<int> updateUserPassAsync(string uid, string upass, string uname, string uemail, string utel, string cellPhone, string userad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/Refresh", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Refresh(System.Data.DataSet dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/Refresh", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> RefreshAsync(System.Data.DataSet dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getClientListOfRDC", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getClientListOfRDC(string sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getClientListOfRDC", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getClientListOfRDCAsync(string sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getAllRDCList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getAllRDCList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getAllRDCList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getAllRDCListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getAllRolesOfParty", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getAllRolesOfParty(string party_c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getAllRolesOfParty", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getAllRolesOfPartyAsync(string party_c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getAllClientsForRights", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getAllClientsForRights();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getAllClientsForRights", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getAllClientsForRightsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getAllClients", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getAllClients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getAllClients", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getAllClientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getClients", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getClients(string party_property);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getClients", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getClientsAsync(string party_property);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/batchUpdate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int batchUpdate(string columnName, string columnValue, string OMS_NOs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/batchUpdate", ReplyAction="*")]
        System.Threading.Tasks.Task<int> batchUpdateAsync(string columnName, string columnValue, string OMS_NOs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getOrdersHeaderAndDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getOrdersHeaderAndDetail(string OMS_NOs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getOrdersHeaderAndDetail", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getOrdersHeaderAndDetailAsync(string OMS_NOs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getUsersList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getUsersList(string keyword, string RDC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getUsersList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getUsersListAsync(string keyword, string RDC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/deleteUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int deleteUser(string sys_user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/deleteUser", ReplyAction="*")]
        System.Threading.Tasks.Task<int> deleteUserAsync(string sys_user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/deleteRole", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int deleteRole(string sys_role_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/deleteRole", ReplyAction="*")]
        System.Threading.Tasks.Task<int> deleteRoleAsync(string sys_role_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getUserInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getUserInfo(string sys_user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getUserInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getUserInfoAsync(string sys_user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getRoleInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getRoleInfo(string sys_role_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getRoleInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getRoleInfoAsync(string sys_role_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/updateUserInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int updateUserInfo(System.Data.DataSet dsUserInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/updateUserInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<int> updateUserInfoAsync(System.Data.DataSet dsUserInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/updateRoleInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int updateRoleInfo(System.Data.DataSet dsRoleInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/updateRoleInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<int> updateRoleInfoAsync(System.Data.DataSet dsRoleInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getAllRoles", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getAllRoles(string keyword, string RDC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getAllRoles", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getAllRolesAsync(string keyword, string RDC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/updateOrderInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int updateOrderInfo(System.Data.DataSet dsOrderInfo, string[] conditions, string[] useLog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/updateOrderInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<int> updateOrderInfoAsync(System.Data.DataSet dsOrderInfo, string[] conditions, string[] useLog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/transferRDC", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int transferRDC(string[] conditions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/transferRDC", ReplyAction="*")]
        System.Threading.Tasks.Task<int> transferRDCAsync(string[] conditions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/PLChange", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet PLChange(string omsList, string clientList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/PLChange", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> PLChangeAsync(string omsList, string clientList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getNewGSN_NO", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] getNewGSN_NO(string client_c, string order_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getNewGSN_NO", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> getNewGSN_NOAsync(string client_c, string order_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getNewGSN_NO_NEW", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] getNewGSN_NO_NEW(string client_c, string order_no, string strRDCCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getNewGSN_NO_NEW", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> getNewGSN_NO_NEWAsync(string client_c, string order_no, string strRDCCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/GenerateGSN_NO_NEW", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GenerateGSN_NO_NEW(string client_c, string order_no, string strRDCCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/GenerateGSN_NO_NEW", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GenerateGSN_NO_NEWAsync(string client_c, string order_no, string strRDCCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/ApplyColQARelease", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int ApplyColQARelease(string strUserID, string strRDC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/ApplyColQARelease", ReplyAction="*")]
        System.Threading.Tasks.Task<int> ApplyColQAReleaseAsync(string strUserID, string strRDC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/CheckSplitReason", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CheckSplitReason(string strGSN, string strReason, string strRDC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/CheckSplitReason", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CheckSplitReasonAsync(string strGSN, string strReason, string strRDC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/GenerateGSN_NO", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GenerateGSN_NO(string client_c, string order_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/GenerateGSN_NO", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GenerateGSN_NOAsync(string client_c, string order_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getNewOMS_NO", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getNewOMS_NO(string gsn_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getNewOMS_NO", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getNewOMS_NOAsync(string gsn_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/GenerateOMS_NO", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GenerateOMS_NO(string gsn_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/GenerateOMS_NO", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GenerateOMS_NOAsync(string gsn_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/auditOrders", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet auditOrders(System.Data.DataSet dsInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/auditOrders", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> auditOrdersAsync(System.Data.DataSet dsInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/Log", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void Log(string moduleName, string action, string sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/Log", ReplyAction="*")]
        System.Threading.Tasks.Task LogAsync(string moduleName, string action, string sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/fillDataSetForExport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet fillDataSetForExport(string[] conditions, System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/fillDataSetForExport", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> fillDataSetForExportAsync(string[] conditions, System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/GSN_CHECK", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GSN_CHECK(string strRDC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/GSN_CHECK", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GSN_CHECKAsync(string strRDC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/ExportXML2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int ExportXML2(string[] conditions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/ExportXML2", ReplyAction="*")]
        System.Threading.Tasks.Task<int> ExportXML2Async(string[] conditions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/ExportXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] ExportXML(string[] conditions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/ExportXML", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> ExportXMLAsync(string[] conditions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getCheckOrders", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getCheckOrders(string[] searchConditions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getCheckOrders", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getCheckOrdersAsync(string[] searchConditions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getOrderInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getOrderInfo(string oms, string Details_Columns);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getOrderInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getOrderInfoAsync(string oms, string Details_Columns);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/checkOrders", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int checkOrders(string OMS_NOs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/checkOrders", ReplyAction="*")]
        System.Threading.Tasks.Task<int> checkOrdersAsync(string OMS_NOs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/searchOrders", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet searchOrders(string paramColumnName, System.Data.DataSet ds, int pagestart, int pageend);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/searchOrders", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> searchOrdersAsync(string paramColumnName, System.Data.DataSet ds, int pagestart, int pageend);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/collectOrders", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet collectOrders(string[] conditions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/collectOrders", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> collectOrdersAsync(string[] conditions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/deleteStatStyleInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int deleteStatStyleInfo(string[] conditions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/deleteStatStyleInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<int> deleteStatStyleInfoAsync(string[] conditions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getAllStatStyles", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getAllStatStyles(string[] conditions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getAllStatStyles", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getAllStatStylesAsync(string[] conditions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/updateStatStyleInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int updateStatStyleInfo(System.Data.DataSet dsStatStyleInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/updateStatStyleInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<int> updateStatStyleInfoAsync(System.Data.DataSet dsStatStyleInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/fillDataSetForExportExcel", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet fillDataSetForExportExcel(string[] conditions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/fillDataSetForExportExcel", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> fillDataSetForExportExcelAsync(string[] conditions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/fillExportExcel", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        System.Data.DataSet fillExportExcel(object[] conditions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/fillExportExcel", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> fillExportExcelAsync(object[] conditions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/updateVasInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        int updateVasInfo(System.Data.DataSet dsVas, string[] conditions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/updateVasInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<int> updateVasInfoAsync(System.Data.DataSet dsVas, string[] conditions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getVasTypesOfProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        System.Data.DataSet getVasTypesOfProduct(string[] conditions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getVasTypesOfProduct", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getVasTypesOfProductAsync(string[] conditions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getRDCListOfClient", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        System.Data.DataSet getRDCListOfClient(string client_c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getRDCListOfClient", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getRDCListOfClientAsync(string client_c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getPartyInfoByCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        System.Data.DataSet getPartyInfoByCode(string party_c, string belong_dep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getPartyInfoByCode", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getPartyInfoByCodeAsync(string party_c, string belong_dep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/updateParty", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        int updateParty(object[] party_c, string[] userIn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/updateParty", ReplyAction="*")]
        System.Threading.Tasks.Task<int> updatePartyAsync(object[] party_c, string[] userIn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getOrderDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        System.Data.DataSet getOrderDetails(string[] conditions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getOrderDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getOrderDetailsAsync(string[] conditions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/merge", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        string[] merge(string omsList, string client_c, string addWho);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/merge", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> mergeAsync(string omsList, string client_c, string addWho);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/fillDataSetForPrint", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        System.Data.DataSet fillDataSetForPrint(string[] conditions, System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/fillDataSetForPrint", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> fillDataSetForPrintAsync(string[] conditions, System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/mutiSplit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        int mutiSplit(object[] _params);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/mutiSplit", ReplyAction="*")]
        System.Threading.Tasks.Task<int> mutiSplitAsync(object[] _params);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getUserEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        string getUserEmail(string user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getUserEmail", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getUserEmailAsync(string user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getRDCWHCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        object getRDCWHCode(string rdcCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getRDCWHCode", ReplyAction="*")]
        System.Threading.Tasks.Task<object> getRDCWHCodeAsync(string rdcCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getWmsStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        System.Data.DataSet getWmsStatus(bool isIssue, string omsNo, string whCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getWmsStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getWmsStatusAsync(bool isIssue, string omsNo, string whCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getTmsStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        object getTmsStatus(string omsNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/getTmsStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<object> getTmsStatusAsync(string omsNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/DoTrans", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        void DoTrans(object[] sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://st-anda.com/DoTrans", ReplyAction="*")]
        System.Threading.Tasks.Task DoTransAsync(object[] sql);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SystemWSSoapChannel : Biz.SySWS.SystemWSSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SystemWSSoapClient : System.ServiceModel.ClientBase<Biz.SySWS.SystemWSSoap>, Biz.SySWS.SystemWSSoap {
        
        public SystemWSSoapClient() {
        }
        
        public SystemWSSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SystemWSSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SystemWSSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SystemWSSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SetUser(string Username, string IP, string MAC) {
            base.Channel.SetUser(Username, IP, MAC);
        }
        
        public System.Threading.Tasks.Task SetUserAsync(string Username, string IP, string MAC) {
            return base.Channel.SetUserAsync(Username, IP, MAC);
        }
        
        public System.Data.DataSet checkUserLogin(string[] conditions) {
            return base.Channel.checkUserLogin(conditions);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> checkUserLoginAsync(string[] conditions) {
            return base.Channel.checkUserLoginAsync(conditions);
        }
        
        public int updateUserPass(string uid, string upass, string uname, string uemail, string utel, string cellPhone, string userad) {
            return base.Channel.updateUserPass(uid, upass, uname, uemail, utel, cellPhone, userad);
        }
        
        public System.Threading.Tasks.Task<int> updateUserPassAsync(string uid, string upass, string uname, string uemail, string utel, string cellPhone, string userad) {
            return base.Channel.updateUserPassAsync(uid, upass, uname, uemail, utel, cellPhone, userad);
        }
        
        public System.Data.DataSet Refresh(System.Data.DataSet dt) {
            return base.Channel.Refresh(dt);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> RefreshAsync(System.Data.DataSet dt) {
            return base.Channel.RefreshAsync(dt);
        }
        
        public System.Data.DataSet getClientListOfRDC(string sql) {
            return base.Channel.getClientListOfRDC(sql);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getClientListOfRDCAsync(string sql) {
            return base.Channel.getClientListOfRDCAsync(sql);
        }
        
        public System.Data.DataSet getAllRDCList() {
            return base.Channel.getAllRDCList();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getAllRDCListAsync() {
            return base.Channel.getAllRDCListAsync();
        }
        
        public System.Data.DataSet getAllRolesOfParty(string party_c) {
            return base.Channel.getAllRolesOfParty(party_c);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getAllRolesOfPartyAsync(string party_c) {
            return base.Channel.getAllRolesOfPartyAsync(party_c);
        }
        
        public System.Data.DataSet getAllClientsForRights() {
            return base.Channel.getAllClientsForRights();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getAllClientsForRightsAsync() {
            return base.Channel.getAllClientsForRightsAsync();
        }
        
        public System.Data.DataSet getAllClients() {
            return base.Channel.getAllClients();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getAllClientsAsync() {
            return base.Channel.getAllClientsAsync();
        }
        
        public System.Data.DataSet getClients(string party_property) {
            return base.Channel.getClients(party_property);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getClientsAsync(string party_property) {
            return base.Channel.getClientsAsync(party_property);
        }
        
        public int batchUpdate(string columnName, string columnValue, string OMS_NOs) {
            return base.Channel.batchUpdate(columnName, columnValue, OMS_NOs);
        }
        
        public System.Threading.Tasks.Task<int> batchUpdateAsync(string columnName, string columnValue, string OMS_NOs) {
            return base.Channel.batchUpdateAsync(columnName, columnValue, OMS_NOs);
        }
        
        public System.Data.DataSet getOrdersHeaderAndDetail(string OMS_NOs) {
            return base.Channel.getOrdersHeaderAndDetail(OMS_NOs);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getOrdersHeaderAndDetailAsync(string OMS_NOs) {
            return base.Channel.getOrdersHeaderAndDetailAsync(OMS_NOs);
        }
        
        public System.Data.DataSet getUsersList(string keyword, string RDC) {
            return base.Channel.getUsersList(keyword, RDC);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getUsersListAsync(string keyword, string RDC) {
            return base.Channel.getUsersListAsync(keyword, RDC);
        }
        
        public int deleteUser(string sys_user_id) {
            return base.Channel.deleteUser(sys_user_id);
        }
        
        public System.Threading.Tasks.Task<int> deleteUserAsync(string sys_user_id) {
            return base.Channel.deleteUserAsync(sys_user_id);
        }
        
        public int deleteRole(string sys_role_id) {
            return base.Channel.deleteRole(sys_role_id);
        }
        
        public System.Threading.Tasks.Task<int> deleteRoleAsync(string sys_role_id) {
            return base.Channel.deleteRoleAsync(sys_role_id);
        }
        
        public System.Data.DataSet getUserInfo(string sys_user_id) {
            return base.Channel.getUserInfo(sys_user_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getUserInfoAsync(string sys_user_id) {
            return base.Channel.getUserInfoAsync(sys_user_id);
        }
        
        public System.Data.DataSet getRoleInfo(string sys_role_id) {
            return base.Channel.getRoleInfo(sys_role_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getRoleInfoAsync(string sys_role_id) {
            return base.Channel.getRoleInfoAsync(sys_role_id);
        }
        
        public int updateUserInfo(System.Data.DataSet dsUserInfo) {
            return base.Channel.updateUserInfo(dsUserInfo);
        }
        
        public System.Threading.Tasks.Task<int> updateUserInfoAsync(System.Data.DataSet dsUserInfo) {
            return base.Channel.updateUserInfoAsync(dsUserInfo);
        }
        
        public int updateRoleInfo(System.Data.DataSet dsRoleInfo) {
            return base.Channel.updateRoleInfo(dsRoleInfo);
        }
        
        public System.Threading.Tasks.Task<int> updateRoleInfoAsync(System.Data.DataSet dsRoleInfo) {
            return base.Channel.updateRoleInfoAsync(dsRoleInfo);
        }
        
        public System.Data.DataSet getAllRoles(string keyword, string RDC) {
            return base.Channel.getAllRoles(keyword, RDC);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getAllRolesAsync(string keyword, string RDC) {
            return base.Channel.getAllRolesAsync(keyword, RDC);
        }
        
        public int updateOrderInfo(System.Data.DataSet dsOrderInfo, string[] conditions, string[] useLog) {
            return base.Channel.updateOrderInfo(dsOrderInfo, conditions, useLog);
        }
        
        public System.Threading.Tasks.Task<int> updateOrderInfoAsync(System.Data.DataSet dsOrderInfo, string[] conditions, string[] useLog) {
            return base.Channel.updateOrderInfoAsync(dsOrderInfo, conditions, useLog);
        }
        
        public int transferRDC(string[] conditions) {
            return base.Channel.transferRDC(conditions);
        }
        
        public System.Threading.Tasks.Task<int> transferRDCAsync(string[] conditions) {
            return base.Channel.transferRDCAsync(conditions);
        }
        
        public System.Data.DataSet PLChange(string omsList, string clientList) {
            return base.Channel.PLChange(omsList, clientList);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> PLChangeAsync(string omsList, string clientList) {
            return base.Channel.PLChangeAsync(omsList, clientList);
        }
        
        public string[] getNewGSN_NO(string client_c, string order_no) {
            return base.Channel.getNewGSN_NO(client_c, order_no);
        }
        
        public System.Threading.Tasks.Task<string[]> getNewGSN_NOAsync(string client_c, string order_no) {
            return base.Channel.getNewGSN_NOAsync(client_c, order_no);
        }
        
        public string[] getNewGSN_NO_NEW(string client_c, string order_no, string strRDCCode) {
            return base.Channel.getNewGSN_NO_NEW(client_c, order_no, strRDCCode);
        }
        
        public System.Threading.Tasks.Task<string[]> getNewGSN_NO_NEWAsync(string client_c, string order_no, string strRDCCode) {
            return base.Channel.getNewGSN_NO_NEWAsync(client_c, order_no, strRDCCode);
        }
        
        public string[] GenerateGSN_NO_NEW(string client_c, string order_no, string strRDCCode) {
            return base.Channel.GenerateGSN_NO_NEW(client_c, order_no, strRDCCode);
        }
        
        public System.Threading.Tasks.Task<string[]> GenerateGSN_NO_NEWAsync(string client_c, string order_no, string strRDCCode) {
            return base.Channel.GenerateGSN_NO_NEWAsync(client_c, order_no, strRDCCode);
        }
        
        public int ApplyColQARelease(string strUserID, string strRDC) {
            return base.Channel.ApplyColQARelease(strUserID, strRDC);
        }
        
        public System.Threading.Tasks.Task<int> ApplyColQAReleaseAsync(string strUserID, string strRDC) {
            return base.Channel.ApplyColQAReleaseAsync(strUserID, strRDC);
        }
        
        public string CheckSplitReason(string strGSN, string strReason, string strRDC) {
            return base.Channel.CheckSplitReason(strGSN, strReason, strRDC);
        }
        
        public System.Threading.Tasks.Task<string> CheckSplitReasonAsync(string strGSN, string strReason, string strRDC) {
            return base.Channel.CheckSplitReasonAsync(strGSN, strReason, strRDC);
        }
        
        public string[] GenerateGSN_NO(string client_c, string order_no) {
            return base.Channel.GenerateGSN_NO(client_c, order_no);
        }
        
        public System.Threading.Tasks.Task<string[]> GenerateGSN_NOAsync(string client_c, string order_no) {
            return base.Channel.GenerateGSN_NOAsync(client_c, order_no);
        }
        
        public string getNewOMS_NO(string gsn_no) {
            return base.Channel.getNewOMS_NO(gsn_no);
        }
        
        public System.Threading.Tasks.Task<string> getNewOMS_NOAsync(string gsn_no) {
            return base.Channel.getNewOMS_NOAsync(gsn_no);
        }
        
        public string GenerateOMS_NO(string gsn_no) {
            return base.Channel.GenerateOMS_NO(gsn_no);
        }
        
        public System.Threading.Tasks.Task<string> GenerateOMS_NOAsync(string gsn_no) {
            return base.Channel.GenerateOMS_NOAsync(gsn_no);
        }
        
        public System.Data.DataSet auditOrders(System.Data.DataSet dsInfo) {
            return base.Channel.auditOrders(dsInfo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> auditOrdersAsync(System.Data.DataSet dsInfo) {
            return base.Channel.auditOrdersAsync(dsInfo);
        }
        
        public void Log(string moduleName, string action, string sql) {
            base.Channel.Log(moduleName, action, sql);
        }
        
        public System.Threading.Tasks.Task LogAsync(string moduleName, string action, string sql) {
            return base.Channel.LogAsync(moduleName, action, sql);
        }
        
        public System.Data.DataSet fillDataSetForExport(string[] conditions, System.Data.DataSet ds) {
            return base.Channel.fillDataSetForExport(conditions, ds);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> fillDataSetForExportAsync(string[] conditions, System.Data.DataSet ds) {
            return base.Channel.fillDataSetForExportAsync(conditions, ds);
        }
        
        public int GSN_CHECK(string strRDC) {
            return base.Channel.GSN_CHECK(strRDC);
        }
        
        public System.Threading.Tasks.Task<int> GSN_CHECKAsync(string strRDC) {
            return base.Channel.GSN_CHECKAsync(strRDC);
        }
        
        public int ExportXML2(string[] conditions) {
            return base.Channel.ExportXML2(conditions);
        }
        
        public System.Threading.Tasks.Task<int> ExportXML2Async(string[] conditions) {
            return base.Channel.ExportXML2Async(conditions);
        }
        
        public string[] ExportXML(string[] conditions) {
            return base.Channel.ExportXML(conditions);
        }
        
        public System.Threading.Tasks.Task<string[]> ExportXMLAsync(string[] conditions) {
            return base.Channel.ExportXMLAsync(conditions);
        }
        
        public System.Data.DataSet getCheckOrders(string[] searchConditions) {
            return base.Channel.getCheckOrders(searchConditions);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getCheckOrdersAsync(string[] searchConditions) {
            return base.Channel.getCheckOrdersAsync(searchConditions);
        }
        
        public System.Data.DataSet getOrderInfo(string oms, string Details_Columns) {
            return base.Channel.getOrderInfo(oms, Details_Columns);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getOrderInfoAsync(string oms, string Details_Columns) {
            return base.Channel.getOrderInfoAsync(oms, Details_Columns);
        }
        
        public int checkOrders(string OMS_NOs) {
            return base.Channel.checkOrders(OMS_NOs);
        }
        
        public System.Threading.Tasks.Task<int> checkOrdersAsync(string OMS_NOs) {
            return base.Channel.checkOrdersAsync(OMS_NOs);
        }
        
        public System.Data.DataSet searchOrders(string paramColumnName, System.Data.DataSet ds, int pagestart, int pageend) {
            return base.Channel.searchOrders(paramColumnName, ds, pagestart, pageend);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> searchOrdersAsync(string paramColumnName, System.Data.DataSet ds, int pagestart, int pageend) {
            return base.Channel.searchOrdersAsync(paramColumnName, ds, pagestart, pageend);
        }
        
        public System.Data.DataSet collectOrders(string[] conditions) {
            return base.Channel.collectOrders(conditions);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> collectOrdersAsync(string[] conditions) {
            return base.Channel.collectOrdersAsync(conditions);
        }
        
        public int deleteStatStyleInfo(string[] conditions) {
            return base.Channel.deleteStatStyleInfo(conditions);
        }
        
        public System.Threading.Tasks.Task<int> deleteStatStyleInfoAsync(string[] conditions) {
            return base.Channel.deleteStatStyleInfoAsync(conditions);
        }
        
        public System.Data.DataSet getAllStatStyles(string[] conditions) {
            return base.Channel.getAllStatStyles(conditions);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getAllStatStylesAsync(string[] conditions) {
            return base.Channel.getAllStatStylesAsync(conditions);
        }
        
        public int updateStatStyleInfo(System.Data.DataSet dsStatStyleInfo) {
            return base.Channel.updateStatStyleInfo(dsStatStyleInfo);
        }
        
        public System.Threading.Tasks.Task<int> updateStatStyleInfoAsync(System.Data.DataSet dsStatStyleInfo) {
            return base.Channel.updateStatStyleInfoAsync(dsStatStyleInfo);
        }
        
        public System.Data.DataSet fillDataSetForExportExcel(string[] conditions) {
            return base.Channel.fillDataSetForExportExcel(conditions);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> fillDataSetForExportExcelAsync(string[] conditions) {
            return base.Channel.fillDataSetForExportExcelAsync(conditions);
        }
        
        public System.Data.DataSet fillExportExcel(object[] conditions) {
            return base.Channel.fillExportExcel(conditions);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> fillExportExcelAsync(object[] conditions) {
            return base.Channel.fillExportExcelAsync(conditions);
        }
        
        public int updateVasInfo(System.Data.DataSet dsVas, string[] conditions) {
            return base.Channel.updateVasInfo(dsVas, conditions);
        }
        
        public System.Threading.Tasks.Task<int> updateVasInfoAsync(System.Data.DataSet dsVas, string[] conditions) {
            return base.Channel.updateVasInfoAsync(dsVas, conditions);
        }
        
        public System.Data.DataSet getVasTypesOfProduct(string[] conditions) {
            return base.Channel.getVasTypesOfProduct(conditions);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getVasTypesOfProductAsync(string[] conditions) {
            return base.Channel.getVasTypesOfProductAsync(conditions);
        }
        
        public System.Data.DataSet getRDCListOfClient(string client_c) {
            return base.Channel.getRDCListOfClient(client_c);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getRDCListOfClientAsync(string client_c) {
            return base.Channel.getRDCListOfClientAsync(client_c);
        }
        
        public System.Data.DataSet getPartyInfoByCode(string party_c, string belong_dep) {
            return base.Channel.getPartyInfoByCode(party_c, belong_dep);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getPartyInfoByCodeAsync(string party_c, string belong_dep) {
            return base.Channel.getPartyInfoByCodeAsync(party_c, belong_dep);
        }
        
        public int updateParty(object[] party_c, string[] userIn) {
            return base.Channel.updateParty(party_c, userIn);
        }
        
        public System.Threading.Tasks.Task<int> updatePartyAsync(object[] party_c, string[] userIn) {
            return base.Channel.updatePartyAsync(party_c, userIn);
        }
        
        public System.Data.DataSet getOrderDetails(string[] conditions) {
            return base.Channel.getOrderDetails(conditions);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getOrderDetailsAsync(string[] conditions) {
            return base.Channel.getOrderDetailsAsync(conditions);
        }
        
        public string[] merge(string omsList, string client_c, string addWho) {
            return base.Channel.merge(omsList, client_c, addWho);
        }
        
        public System.Threading.Tasks.Task<string[]> mergeAsync(string omsList, string client_c, string addWho) {
            return base.Channel.mergeAsync(omsList, client_c, addWho);
        }
        
        public System.Data.DataSet fillDataSetForPrint(string[] conditions, System.Data.DataSet ds) {
            return base.Channel.fillDataSetForPrint(conditions, ds);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> fillDataSetForPrintAsync(string[] conditions, System.Data.DataSet ds) {
            return base.Channel.fillDataSetForPrintAsync(conditions, ds);
        }
        
        public int mutiSplit(object[] _params) {
            return base.Channel.mutiSplit(_params);
        }
        
        public System.Threading.Tasks.Task<int> mutiSplitAsync(object[] _params) {
            return base.Channel.mutiSplitAsync(_params);
        }
        
        public string getUserEmail(string user_id) {
            return base.Channel.getUserEmail(user_id);
        }
        
        public System.Threading.Tasks.Task<string> getUserEmailAsync(string user_id) {
            return base.Channel.getUserEmailAsync(user_id);
        }
        
        public object getRDCWHCode(string rdcCode) {
            return base.Channel.getRDCWHCode(rdcCode);
        }
        
        public System.Threading.Tasks.Task<object> getRDCWHCodeAsync(string rdcCode) {
            return base.Channel.getRDCWHCodeAsync(rdcCode);
        }
        
        public System.Data.DataSet getWmsStatus(bool isIssue, string omsNo, string whCode) {
            return base.Channel.getWmsStatus(isIssue, omsNo, whCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getWmsStatusAsync(bool isIssue, string omsNo, string whCode) {
            return base.Channel.getWmsStatusAsync(isIssue, omsNo, whCode);
        }
        
        public object getTmsStatus(string omsNo) {
            return base.Channel.getTmsStatus(omsNo);
        }
        
        public System.Threading.Tasks.Task<object> getTmsStatusAsync(string omsNo) {
            return base.Channel.getTmsStatusAsync(omsNo);
        }
        
        public void DoTrans(object[] sql) {
            base.Channel.DoTrans(sql);
        }
        
        public System.Threading.Tasks.Task DoTransAsync(object[] sql) {
            return base.Channel.DoTransAsync(sql);
        }
    }
}
